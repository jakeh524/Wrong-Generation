{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jakeherron/Desktop/wrong-generation/wrong-generation-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport chartService from './services/charts';\n\nconst App = () => {\n  _s();\n\n  const [chartEntries, setChartEntries] = useState([]);\n  const [chartDate, setChartDate] = useState('');\n  const [newDay, setNewDay] = useState('');\n  const [newMonth, setNewMonth] = useState('');\n  const [newYear, setNewYear] = useState('');\n\n  const handleDayChange = event => {\n    setNewDay(event.target.value);\n  };\n\n  const handleMonthChange = event => {\n    setNewMonth(event.target.value);\n  };\n\n  const handleYearChange = event => {\n    setNewYear(event.target.value);\n  };\n\n  const getNextDayOfWeek = (date, dayOfWeek) => {\n    let resultDate = new Date(date.getTime());\n    resultDate.setDate(date.getDate() + (7 + dayOfWeek - date.getDay()) % 7);\n    const month = String(resultDate.getUTCMonth() + 1);\n    const day = String(resultDate.getUTCDate() - 1);\n    const year = String(resultDate.getUTCFullYear());\n    const formattedDateString = year + '-' + month + '-' + day;\n    return resultDate;\n  };\n\n  const searchChart = event => {\n    event.preventDefault();\n    const formattedMonth = Number(newMonth).toLocaleString('en-US', {\n      minimumIntegerDigits: 2,\n      useGrouping: false\n    });\n    const formattedDay = Number(newDay).toLocaleString('en-US', {\n      minimumIntegerDigits: 2,\n      useGrouping: false\n    });\n    const formattedInputDate = new Date(`${newYear}-${formattedMonth}-${formattedDay}`);\n    const nextChartDate = getNextDayOfWeek(formattedInputDate, 6);\n    console.log(nextChartDate);\n    chartService.getChart(nextChartDate).then(returnedChart => {\n      setChartDate(returnedChart[0].date);\n      setChartEntries(returnedChart[0].entries);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Wrong Generation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: searchChart,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"day: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: newDay,\n          onChange: handleDayChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"month: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: newMonth,\n          onChange: handleMonthChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"year: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: newYear,\n          onChange: handleYearChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Showing Chart Data from \", chartDate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: chartEntries.map(entry => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [entry.position, \". \", entry.song, \" by \", entry.artist]\n      }, entry.position, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"pdcpQgCgCRTUUGSGXVekvkCKlkc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jakeherron/Desktop/wrong-generation/wrong-generation-frontend/src/App.js"],"names":["React","useState","useEffect","chartService","App","chartEntries","setChartEntries","chartDate","setChartDate","newDay","setNewDay","newMonth","setNewMonth","newYear","setNewYear","handleDayChange","event","target","value","handleMonthChange","handleYearChange","getNextDayOfWeek","date","dayOfWeek","resultDate","Date","getTime","setDate","getDate","getDay","month","String","getUTCMonth","day","getUTCDate","year","getUTCFullYear","formattedDateString","searchChart","preventDefault","formattedMonth","Number","toLocaleString","minimumIntegerDigits","useGrouping","formattedDay","formattedInputDate","nextChartDate","console","log","getChart","then","returnedChart","entries","map","entry","position","song","artist"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport chartService from './services/charts'\n\nconst App = () => {\n  const [ chartEntries, setChartEntries ] = useState([])\n  const [ chartDate, setChartDate ] = useState('')\n  const [ newDay, setNewDay ] = useState('');\n  const [ newMonth, setNewMonth ] = useState('');\n  const [ newYear, setNewYear ] = useState('');\n\n  const handleDayChange = (event) => {\n    setNewDay(event.target.value);\n  }\n  const handleMonthChange = (event) => {\n    setNewMonth(event.target.value);\n  }\n  const handleYearChange = (event) => {\n    setNewYear(event.target.value);\n  }\n\n  const getNextDayOfWeek = (date, dayOfWeek) => {\n    let resultDate = new Date(date.getTime());\n    resultDate.setDate(date.getDate() + (7 + dayOfWeek - date.getDay()) % 7);\n    const month = String(resultDate.getUTCMonth() + 1)\n    const day = String(resultDate.getUTCDate() - 1)\n    const year = String(resultDate.getUTCFullYear())\n    const formattedDateString = year + '-' + month + '-' + day\n    return resultDate;\n  }\n\n  const searchChart = (event) => {\n    event.preventDefault();\n    const formattedMonth = (Number(newMonth)).toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping: false});\n    const formattedDay = (Number(newDay)).toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping: false});\n    const formattedInputDate = new Date(`${newYear}-${formattedMonth}-${formattedDay}`);\n    const nextChartDate = getNextDayOfWeek(formattedInputDate, 6);\n    console.log(nextChartDate)\n    \n    chartService\n      .getChart(nextChartDate)\n      .then(returnedChart => {\n        setChartDate(returnedChart[0].date)\n        setChartEntries(returnedChart[0].entries)\n      })\n  }\n\n\n  return(\n    <div>\n      <h1>Wrong Generation</h1>\n\n      <form onSubmit={searchChart}>\n        <div>\n          day: <input\n            value={newDay}\n            onChange={handleDayChange}\n          />\n        </div>\n        <div>\n          month: <input\n            value={newMonth}\n            onChange={handleMonthChange}\n          />\n        </div>\n        <div>\n          year: <input\n            value={newYear}\n            onChange={handleYearChange}\n          />\n        </div>\n        <div>\n          <button type=\"submit\">search</button>\n        </div>\n      </form>\n\n      <h3>Showing Chart Data from {chartDate}</h3>\n\n      <div>\n        {chartEntries.map(entry => \n          <li key={entry.position}>\n            {entry.position}. {entry.song} by {entry.artist}\n          </li>\n        )}\n      </div>\n    \n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}